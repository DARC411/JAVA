import java.io.*;
import java.util.InputMismatchException;
import java.util.Scanner;

public class CajeroApp {

    // Metodo para escribir el saldo en el archivo
    public static void crearArchivoSaldo(double saldoInicial) {
        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("saldo.dat"))) {
            out.writeDouble(saldoInicial);
        } catch (IOException e) {
            System.out.println("Error al guardar el saldo: " + e.getMessage());
        }
    }

    // Metodo para leer el saldo del archivo
    public static double leerSaldo() {
        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream("saldo.dat"))) {
            return in.readDouble();
        } catch (IOException e) {
            System.out.println("Error al leer el saldo, inicializando con 500.53...");
            return 500.53; // Si no se puede leer, se devuelve el saldo inicial predeterminado.
        }
    }

     // Metodo para leer un numero entero dentro de un rango para el menu
     public static int leerNumero(Scanner scanner, String mensaje, int min, int max) {
        int numero;
        while (true) {
            System.out.print(mensaje);
            try {
                numero = scanner.nextInt();
                scanner.nextLine(); // Consumir la nueva linea

                if (numero < min || numero > max) {
                    System.out.println("Error: Ingresa un numero entre " + min + " y " + max + ".");
                } else {
                    return numero; // Entrada valida
                }
            } catch (InputMismatchException e) {
                System.out.println("Error: Debes ingresar un numero valido.");
                scanner.nextLine(); // Limpiar el buffer del scanner
            }
        }
    }

    // Metodo para leer un monto valido 
    public static double leerMonto(Scanner scanner, String mensaje, double saldo) {
        double monto;
        while (true) {
            System.out.print(mensaje);
            try {
                monto = scanner.nextDouble();
                scanner.nextLine(); // Consumir la nueva linea

                if (monto <= 0) {
                    System.out.println("Error: El monto debe ser mayor a 0.");
                } else if (tieneMasDeDosDecimales(monto)) {
                    System.out.println("Error: Solo se permiten montos con hasta dos cifras decimales.");
                } else if (monto > saldo) {
                    System.out.println("Error: No puedes retirar mas de lo que tienes en la cuenta.");
                } else {
                    return monto; // Entrada valida
                }
            } catch (InputMismatchException e) {
                System.out.println("Error: Debes ingresar un numero valido.");
                scanner.nextLine(); // Limpiar el buffer del scanner
            }
        }
    }


    // Metodo para actualizar el saldo en el archivo
    public static void actualizarSaldo(double nuevoSaldo) {
        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("saldo.dat"))) {
            out.writeDouble(nuevoSaldo);
        } catch (IOException e) {
            System.out.println("Error al actualizar el saldo: " + e.getMessage());
        }
    }

    // Metodo para limpiar la pantalla
    public static void clearScreen() {
        System.out.print("\033[H\033[2J");
        System.out.flush();
    }

    // Metodo para pausar hasta que el usuario presione Enter
    public static void pressEnterToContinue(Scanner scanner) {
        System.out.println("Presione Enter para continuar...");
        scanner.nextLine();
    }

    // Metodo para verificar si un numero tiene mas de 2 decimales
    public static boolean tieneMasDeDosDecimales(double numero) {
        return (Math.round(numero * 100) != numero * 100);
    }

    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // **Verificar si el archivo existe, si no, crearlo con 500.53**
        File file = new File("saldo.dat");
        if (!file.exists()) {
            crearArchivoSaldo(500.53);
        }

        while (true) {
            clearScreen();
            System.out.println("\n--- MENU ---");
            System.out.println("1. Consultar Saldo");
            System.out.println("2. Retirar Dinero");
            System.out.println("3. Salir");

            // Usar el metodo leerNumero para obtener una opcion valida en el menu
            int opcion = leerNumero(scanner, "Selecciona una opcion: ", 1, 3);

            switch (opcion) {
                case 1:
                    clearScreen();
                    double saldo = leerSaldo();
                    System.out.println("Su Saldo Actual es: Q" + String.format("%.2f", saldo));
                    pressEnterToContinue(scanner);
                    break;

                case 2:
                    clearScreen();
                    saldo = leerSaldo();

                    // **Usar el metodo leerMonto para obtener un monto valido**
                    double montoRetiro = leerMonto(scanner, "Ingrese el monto a retirar: ", saldo);

                    saldo -= montoRetiro;
                    actualizarSaldo(saldo);
                    System.out.println("Retiro exitoso. Nuevo saldo: Q" + String.format("%.2f", saldo));

                    pressEnterToContinue(scanner);
                    break;

                case 3:
                    System.out.println("Gracias por usar el cajero! SAYONARA!");
                    scanner.close();
                    return;
            }
        }
    }

}
